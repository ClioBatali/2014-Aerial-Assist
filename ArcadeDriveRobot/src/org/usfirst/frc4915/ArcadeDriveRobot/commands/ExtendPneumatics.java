// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc4915.ArcadeDriveRobot.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc4915.ArcadeDriveRobot.Robot;
import org.usfirst.frc4915.ArcadeDriveRobot.subsystems.Harvester;
/**
 *
 */
public class ExtendPneumatics extends Command {
    public ExtendPneumatics() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.harvester);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    // Called just before this Command runs the first time
    protected void initialize() {
        /*if (Robot.launcher.hasLaunchedBall() == true) {
         shouldQuit = true;*/
        if (Robot.harvester.isHarvesterDown() == false) {
            Robot.harvester.extendPneumatics();
            System.out.println("Starting Extend Pneumatics...");
        } else {
            System.out.println("Harvester is already down");
        }
    }
    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        Robot.launcher.stopWindingMotor();
    }
    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return Robot.harvester.isHarvesterDown();
    }
    // Called once after isFinished returns true
    protected void end() {
        System.out.println("Extend Pneumatics done.");
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
        end();
    }
}
