// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc4915.ArcadeDriveRobot.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc4915.ArcadeDriveRobot.Robot;
/**
 *
 */
public class  Turn180 extends Command {
    
    private double degreesOfFreedom = 2.0;
    
    public Turn180() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    // Called just before this Command runs the first time
    protected void initialize() {
        Robot.gyroscope.reset();
    }
    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        Robot.driveTrain.turn();
    }
    // Checks whether Robot has turned within a certain number of degrees from 180
    protected boolean isFinished() {
        return ((180.0-degreesOfFreedom < Robot.gyroscope.getAngle()) &&
               (180.0+degreesOfFreedom > Robot.gyroscope.getAngle())) ||
               ((-180.0-degreesOfFreedom < Robot.gyroscope.getAngle()) &&
               (-180.0+degreesOfFreedom > Robot.gyroscope.getAngle()));
    }
    // Called once after isFinished returns true
    protected void end() {
        Robot.driveTrain.stop();
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    // Can't be interrupted
    protected void interrupted() {
    }
}
