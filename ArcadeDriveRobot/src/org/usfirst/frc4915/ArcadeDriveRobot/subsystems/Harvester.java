// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc4915.ArcadeDriveRobot.subsystems;
import org.usfirst.frc4915.ArcadeDriveRobot.RobotMap;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
/**
 *
 */
public class Harvester extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    DoubleSolenoid pneumaticAnglers = RobotMap.harvesterPneumaticAnglers;
    SpeedController collectionWheels = RobotMap.harvesterCollectionWheels;
    DigitalInput testForBall = RobotMap.harvesterTestForBall;
    DigitalInput magneticSwitch = RobotMap.harvesterMagneticSwitch;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    public boolean getLimitSwitchBallLoaded() {
        return testForBall.get(); // true if ball is inside the loader and intake is complete
    }
    
    public boolean getMagneticSwitchPneumatics() {
        return magneticSwitch.get(); // is true if magnetic switch is near magnet // false if fully extended
    }
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
    public void extendPneumatics() {
        pneumaticAnglers.set(DoubleSolenoid.Value.kForward);
    }
    
    public void retractPneumatics() {
        pneumaticAnglers.set(DoubleSolenoid.Value.kReverse);
    }
    
    public void stopPneumatics() {
        pneumaticAnglers.set(DoubleSolenoid.Value.kOff);
    }
    
    public void stopWheels() {
        collectionWheels.set(0.0);
    }
    
    public void setWheelSpeed(double speed) {
        collectionWheels.set(speed);
    }
}
